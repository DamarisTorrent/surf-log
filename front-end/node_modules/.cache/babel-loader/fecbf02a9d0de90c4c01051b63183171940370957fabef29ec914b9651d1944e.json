{"ast":null,"code":"var _jsxFileName = \"/Users/damaristorrent/buoyproject/surf-log/front-end/src/pages/app/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let dataSplit;\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:8000/message\").then(res => res.json()).then(data => setMessage(data.message));\n  }, []);\n  console.log(message);\n  const fileUrl = \"/view_text_file.php?filename=4100452023.txt.gz&dir=data/stdmet/May/\";\n  // console.log(fileUrl)\n  fetch(fileUrl)\n  // fetch(fileUrl)\n  .then(response => {\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n    return response.text();\n  }).then(fileContent => {\n    // Process the file content here\n\n    const dataString = fileContent.split(\"\\n\");\n    console.log(dataString[0]);\n    console.log(dataString[1]);\n    dataSplit = dataString[2].split(\" \");\n    console.log(dataSplit);\n\n    // You can save the file content to a variable or use it as needed\n    // For example, you can pass it to another function for further processing\n    // yourFunctionToProcessFileContent(fileContent);\n  }).catch(error => {\n    console.error(\"Error reading the file:\", error);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hello from SurfLog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ClLa+zvPL6vd0LAuHSvav3BaFBg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","dataSplit","message","setMessage","fetch","then","res","json","data","console","log","fileUrl","response","ok","Error","text","fileContent","dataString","split","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/damaristorrent/buoyproject/surf-log/front-end/src/pages/app/App.js"],"sourcesContent":["import \"./App.css\"\nimport React, { useState, useEffect } from \"react\"\n\nfunction App() {\n  let dataSplit\n\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/message\")\n      .then((res) => res.json())\n      .then((data) => setMessage(data.message));\n  }, [])\n\n  console.log(message)\n  const fileUrl =\n    \"/view_text_file.php?filename=4100452023.txt.gz&dir=data/stdmet/May/\"\n  // console.log(fileUrl)\n  fetch(fileUrl)\n    // fetch(fileUrl)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\")\n      }\n      return response.text()\n    })\n    .then((fileContent) => {\n      // Process the file content here\n\n      const dataString = fileContent.split(\"\\n\")\n      console.log(dataString[0])\n      console.log(dataString[1])\n      dataSplit = dataString[2].split(\" \")\n      console.log(dataSplit)\n\n      // You can save the file content to a variable or use it as needed\n      // For example, you can pass it to another function for further processing\n      // yourFunctionToProcessFileContent(fileContent);\n    })\n    .catch((error) => {\n      console.error(\"Error reading the file:\", error)\n    })\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        <p>Hello from SurfLog</p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAIC,SAAS;EAEb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,+BAA+B,CAAC,CACnCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,UAAU,CAACK,IAAI,CAACN,OAAO,CAAC,CAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EAENO,OAAO,CAACC,GAAG,CAACR,OAAO,CAAC;EACpB,MAAMS,OAAO,GACX,qEAAqE;EACvE;EACAP,KAAK,CAACO,OAAO;EACX;EAAA,CACCN,IAAI,CAAEO,QAAQ,IAAK;IAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,CACDV,IAAI,CAAEW,WAAW,IAAK;IACrB;;IAEA,MAAMC,UAAU,GAAGD,WAAW,CAACE,KAAK,CAAC,IAAI,CAAC;IAC1CT,OAAO,CAACC,GAAG,CAACO,UAAU,CAAC,CAAC,CAAC,CAAC;IAC1BR,OAAO,CAACC,GAAG,CAACO,UAAU,CAAC,CAAC,CAAC,CAAC;IAC1BhB,SAAS,GAAGgB,UAAU,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IACpCT,OAAO,CAACC,GAAG,CAACT,SAAS,CAAC;;IAEtB;IACA;IACA;EACF,CAAC,CAAC,CACDkB,KAAK,CAAEC,KAAK,IAAK;IAChBX,OAAO,CAACW,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;EACjD,CAAC,CAAC;EAEJ,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBxB,OAAA;MAAQuB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAE5BxB,OAAA;QAAAwB,QAAA,EAAG;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACzB5B,OAAA;QACEuB,SAAS,EAAC,UAAU;QACpBM,IAAI,EAAC,qBAAqB;QAC1BC,MAAM,EAAC,QAAQ;QACfC,GAAG,EAAC,qBAAqB;QAAAP,QAAA,EAC1B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC1B,EAAA,CAxDQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA0DZ,eAAeA,GAAG;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}