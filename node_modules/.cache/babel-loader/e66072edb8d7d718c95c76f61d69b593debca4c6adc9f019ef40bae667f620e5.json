{"ast":null,"code":"var _jsxFileName = \"/Users/patrickmangan/develop-carolina/surf-log/src/pages/app/App.js\";\n// import logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  let dataSplit;\n  const fileUrl = '/view_text_file.php?filename=4100452023.txt.gz&dir=data/stdmet/May/';\n  // console.log(fileUrl)\n  fetch(fileUrl)\n  // fetch(fileUrl)\n  .then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.text();\n  }).then(fileContent => {\n    // Process the file content here\n\n    const dataString = fileContent.split('\\n');\n    console.log(dataString[0]);\n    console.log(dataString[1]);\n    dataSplit = dataString[2];\n    console.log;\n\n    // You can save the file content to a variable or use it as needed\n    // For example, you can pass it to another function for further processing\n    // yourFunctionToProcessFileContent(fileContent);\n  }).catch(error => {\n    console.error('Error reading the file:', error);\n  });\n  console.log(dataSplit);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hello from SurfLog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","App","dataSplit","fileUrl","fetch","then","response","ok","Error","text","fileContent","dataString","split","console","log","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/patrickmangan/develop-carolina/surf-log/src/pages/app/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  \n  let dataSplit\n  \n    const fileUrl = '/view_text_file.php?filename=4100452023.txt.gz&dir=data/stdmet/May/'\n    // console.log(fileUrl)\n    fetch(fileUrl)\n    // fetch(fileUrl)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.text();\n    })\n    .then(fileContent => {\n      // Process the file content here\n     \n      const dataString = fileContent.split('\\n')\n      console.log(dataString[0])\n      console.log(dataString[1])\n      dataSplit = dataString[2]\n      console.log\n\n     \n      // You can save the file content to a variable or use it as needed\n      // For example, you can pass it to another function for further processing\n      // yourFunctionToProcessFileContent(fileContent);\n    })\n    .catch(error => {\n      console.error('Error reading the file:', error);\n    });\n     \n   console.log(dataSplit)\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        <p>\n          Hello from SurfLog\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA,OAAO,WAAW;AAAC,SAAAA,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAEb,IAAIC,SAAS;EAEX,MAAMC,OAAO,GAAG,qEAAqE;EACrF;EACAC,KAAK,CAACD,OAAO;EACb;EAAA,CACCE,IAAI,CAACC,QAAQ,IAAI;IAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,WAAW,IAAI;IACnB;;IAEA,MAAMC,UAAU,GAAGD,WAAW,CAACE,KAAK,CAAC,IAAI,CAAC;IAC1CC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC,CAAC,CAAC,CAAC;IAC1BE,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC,CAAC,CAAC,CAAC;IAC1BT,SAAS,GAAGS,UAAU,CAAC,CAAC,CAAC;IACzBE,OAAO,CAACC,GAAG;;IAGX;IACA;IACA;EACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACdH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;EACjD,CAAC,CAAC;EAEHH,OAAO,CAACC,GAAG,CAACZ,SAAS,CAAC;EAEvB,oBACEF,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBlB,OAAA;MAAQiB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAE5BlB,OAAA;QAAAkB,QAAA,EAAG;MAEH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJtB,OAAA;QACEiB,SAAS,EAAC,UAAU;QACpBM,IAAI,EAAC,qBAAqB;QAC1BC,MAAM,EAAC,QAAQ;QACfC,GAAG,EAAC,qBAAqB;QAAAP,QAAA,EAC1B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACI,EAAA,GApDQzB,GAAG;AAsDZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}